{"version":3,"file":"ng-block-ui-http.mjs","sources":["../../http/block-ui-http-settings.service.ts","../../http/block-ui-http.interceptor.ts","../../http/block-ui-http.module.ts","../../http/ng-block-ui-http.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpSettings } from 'ng-block-ui';\r\n\r\n@Injectable()\r\nexport class BlockUIHttpSettings {\r\n  settings: HttpSettings = {};\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { BlockUIService, BLOCKUI_DEFAULT } from 'ng-block-ui';\r\nimport { BlockUIHttpSettings } from './block-ui-http-settings.service';\r\n\r\n@Injectable()\r\nexport class BlockUIInterceptor implements HttpInterceptor {\r\n  private activeHttpRequests: number;\r\n\r\n  constructor(\r\n    private blockUIService: BlockUIService,\r\n    private blockUIHttpSettings: BlockUIHttpSettings\r\n  ) {\r\n    this.activeHttpRequests = 0;\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let active: boolean = false;\r\n\r\n    if (this.shouldBlock(request)) {\r\n      this.blockUIService.start(BLOCKUI_DEFAULT);\r\n    }\r\n\r\n    return next.handle(request)\r\n      .pipe(\r\n        finalize(() => {\r\n          if (this.shouldBlock(request)) {\r\n            const { blockAllRequestsInProgress } = this.blockUIHttpSettings.settings;\r\n            const method: string = blockAllRequestsInProgress ? 'stop' : 'reset';\r\n            this.blockUIService[method](BLOCKUI_DEFAULT);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  shouldBlock(request: HttpRequest<any>): boolean {\r\n    const { method, urlWithParams } = request;\r\n    const { settings } = this.blockUIHttpSettings;\r\n    const requestFilters = settings.requestFilters || [];\r\n\r\n    return !requestFilters.some((f: any) => {\r\n      if (f && f.method && f.url) {\r\n        return f.method.toUpperCase() === method && f.url.test(urlWithParams);\r\n      } else if (typeof f === 'function') {\r\n        return f(request);\r\n      }\r\n\r\n      return f.test(urlWithParams);\r\n    });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BlockUIModule, HttpSettings } from 'ng-block-ui';\r\nimport { BlockUIHttpSettings } from './block-ui-http-settings.service';\r\nimport { BlockUIInterceptor } from './block-ui-http.interceptor';\r\n\r\n\r\n// Needed for AOT compiling\r\nexport const BlockUIHttpModuleSettings = new InjectionToken<string>('BlockUIHttpModuleSettings');\r\n\r\nexport function provideSettingsInstance(settings: HttpSettings): BlockUIHttpSettings {\r\n  return {\r\n    settings: {\r\n      blockAllRequestsInProgress: true,\r\n      ...settings\r\n    }\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  imports: [BlockUIModule]\r\n})\r\nexport class BlockUIHttpModule {\r\n  static forRoot(settings: HttpSettings = {}): ModuleWithProviders<BlockUIHttpModule> {\r\n    return {\r\n      ngModule: BlockUIHttpModule,\r\n      providers: [\r\n        {\r\n          provide: BlockUIHttpModuleSettings,\r\n          useValue: settings\r\n        },\r\n        {\r\n          provide: BlockUIHttpSettings,\r\n          useFactory: provideSettingsInstance,\r\n          deps: [BlockUIHttpModuleSettings]\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: BlockUIInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2.BlockUIHttpSettings"],"mappings":"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"}