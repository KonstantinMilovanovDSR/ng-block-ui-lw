{"version":3,"file":"ng-block-ui.mjs","sources":["../../lib/constants/block-ui-default-name.constant.ts","../../lib/constants/block-ui-actions.constant.ts","../../lib/services/block-ui-instance.service.ts","../../lib/components/block-ui-content/block-ui-content.component.template.ts","../../lib/components/block-ui-content/block-ui-content.component.ts","../../lib/components/block-ui/block-ui.component.ts","../../lib/services/block-ui.service.ts","../../lib/directives/block-ui.directive.ts","../../lib/block-ui.module.ts","../../lib/decorators/block-ui.decorator.ts","../../lib/ng-block-ui.ts"],"sourcesContent":["export const BlockUIDefaultName: string = 'block-ui-main';\r\n","export class BlockUIActions {\r\n  static START = 'start';\r\n  static STOP = 'stop';\r\n  static UPDATE = 'update';\r\n  static RESET = 'reset';\r\n  static RESET_GLOBAL = 'reset_global';\r\n  static UNSUBSCRIBE = 'unsubscribe';\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\r\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\r\nimport { NgBlockUI } from '../models/block-ui.model';\r\nimport { BlockUISettings } from '../models/block-ui-settings.model';\r\nimport { BlockUIEvent } from '../models/block-ui-event.model';\r\n\r\n\r\n@Injectable()\r\nexport class BlockUIInstanceService {\r\n  blockUISettings: BlockUISettings | any = {};\r\n  blockUIInstances: any = {};\r\n  private blockUISubject: ReplaySubject<any> = new ReplaySubject(1);\r\n  private blockUIObservable: Observable<any> = this.blockUISubject.asObservable();\r\n\r\n  constructor() {\r\n    this.blockUIObservable.subscribe(this.blockUIMiddleware.bind(this));\r\n  }\r\n\r\n  getSettings(): BlockUISettings | any {\r\n    return this.blockUISettings;\r\n  }\r\n\r\n  updateSettings(settings: BlockUISettings | any = {}): void {\r\n    this.blockUISettings = { ...this.blockUISettings, ...settings };\r\n  }\r\n\r\n  decorate(name: string = BlockUIDefaultName): NgBlockUI {\r\n    const blockUI = {\r\n      name,\r\n      isActive: false,\r\n      blockCount: 0,\r\n      start: this.dispatch(this.blockUISubject, BlockUIActions.START, name),\r\n      update: this.dispatch(this.blockUISubject, BlockUIActions.UPDATE, name),\r\n      stop: this.dispatch(this.blockUISubject, BlockUIActions.STOP, name),\r\n      reset: this.dispatch(this.blockUISubject, BlockUIActions.RESET, name),\r\n      resetGlobal: this.dispatch(this.blockUISubject, BlockUIActions.RESET_GLOBAL, name),\r\n      unsubscribe: this.dispatch(this.blockUISubject, BlockUIActions.UNSUBSCRIBE, name)\r\n    } as NgBlockUI;\r\n\r\n    this.blockUIInstances[name] = this.blockUIInstances[name] || blockUI;\r\n\r\n    return blockUI;\r\n  }\r\n\r\n  observe(): Observable<any> {\r\n    return this.blockUIObservable;\r\n  }\r\n\r\n  clearInstance(instanceName: string) {\r\n    this.dispatch(this.blockUISubject, BlockUIActions.RESET, instanceName);\r\n  }\r\n\r\n  private blockUIMiddleware({ action, name }: BlockUIEvent): void {\r\n    let isActive: boolean = null;\r\n\r\n    switch (action) {\r\n      case (BlockUIActions.START):\r\n        isActive = true;\r\n        break;\r\n\r\n      case (BlockUIActions.STOP):\r\n      case (BlockUIActions.RESET):\r\n        isActive = false;\r\n        break;\r\n    }\r\n\r\n    if (isActive !== null) {\r\n      this.blockUIInstances[name].isActive = isActive;\r\n    }\r\n  }\r\n\r\n  private dispatch(subject: ReplaySubject<any>, action: BlockUIActions, name: string = BlockUIDefaultName): Function {\r\n    return (message?: any): void => {\r\n      subject.next({\r\n        name,\r\n        action,\r\n        message\r\n      });\r\n    };\r\n  }\r\n}\r\n","export const template = `\r\n<div class=\"block-ui-wrapper {{name}} {{className}}\" [ngClass]=\"{ 'active': state.blockCount > 0 }\">\r\n  <div class=\"block-ui-spinner\" *ngIf=\"!templateCmp\">\r\n    <div class=\"loader\"></div>\r\n    <div *ngIf=\"message || defaultMessage\" class=\"message\">\r\n      {{ message || defaultMessage }}\r\n    </div>\r\n  </div>\r\n  <ng-template *ngIf=\"templateCmp\" #templateOutlet></ng-template>\r\n</div>\r\n`;\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Input,\r\n  ViewChild,\r\n  ComponentRef,\r\n  TemplateRef,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\r\nimport { BlockUIEvent } from '../../models/block-ui-event.model';\r\nimport { BlockUIActions } from '../../constants/block-ui-actions.constant';\r\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\r\nimport { styles } from './block-ui-content.component.style';\r\nimport { template } from './block-ui-content.component.template';\r\nimport { BlockUISettings } from '../../models/block-ui-settings.model';\r\n\r\nexport type BlockState = {\r\n  startTimeouts: Array<any>;\r\n  stopTimeouts: Array<any>;\r\n  updateTimeouts: Array<any>;\r\n  blockCount: number;\r\n  startCallCount: number;\r\n  stopCallCount: number;\r\n};\r\n\r\n@Component({\r\n  selector: 'block-ui-content',\r\n  template: template,\r\n  styles: [styles], // TODO: Find how to bundle styles for npm\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BlockUIContentComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\r\n  @Input() name: string = BlockUIDefaultName;\r\n  @Input() delayStart: number;\r\n  @Input() delayStop: number;\r\n  @Input('message') defaultMessage: string;\r\n  @Input('template') templateCmp: any;\r\n  @ViewChild('templateOutlet', { read: ViewContainerRef })\r\n  templateOutlet: ViewContainerRef;\r\n\r\n  defaultBlockState: BlockState = {\r\n    startTimeouts: [],\r\n    stopTimeouts: [],\r\n    updateTimeouts: [],\r\n    blockCount: 0,\r\n    startCallCount: 0,\r\n    stopCallCount: 0\r\n  };\r\n  state: BlockState = { ...this.defaultBlockState };\r\n  className: string;\r\n  templateCompRef: ComponentRef<{ message?: any }> | TemplateRef<{}>;\r\n  message: any;\r\n\r\n  private blockUISubscription: Subscription;\r\n  private settings: BlockUISettings;\r\n\r\n  constructor(\r\n    private blockUI: BlockUIInstanceService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private changeDetectionRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.settings = this.blockUI.getSettings();\r\n    this.blockUISubscription = this.subscribeToBlockUI(this.blockUI.observe());\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    try {\r\n      if (!this.templateCmp) {\r\n        return false;\r\n      }\r\n\r\n      if (this.templateCmp instanceof TemplateRef) {\r\n        this.templateOutlet.createEmbeddedView(this.templateCmp);\r\n      } else {\r\n        const templateComp = this.resolver.resolveComponentFactory(this.templateCmp);\r\n        this.templateCompRef = this.templateOutlet.createComponent(templateComp);\r\n        this.updateBlockTemplate(this.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('ng-block-ui:', error);\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.detectChanges();\r\n  }\r\n\r\n  private subscribeToBlockUI(blockUI$: Observable<any>): Subscription {\r\n    return blockUI$.subscribe(event => this.onDispatchedEvent(event));\r\n  }\r\n\r\n  private onDispatchedEvent(event: BlockUIEvent) {\r\n    switch (event.action) {\r\n      case BlockUIActions.START:\r\n        this.onStart(event);\r\n        break;\r\n\r\n      case BlockUIActions.STOP:\r\n        this.onStop(event);\r\n        break;\r\n\r\n      case BlockUIActions.UPDATE:\r\n        this.onUpdate(event);\r\n        break;\r\n\r\n      case BlockUIActions.RESET:\r\n        this.onReset(event);\r\n        break;\r\n\r\n      case BlockUIActions.RESET_GLOBAL:\r\n        this.resetState();\r\n        break;\r\n\r\n      case BlockUIActions.UNSUBSCRIBE:\r\n        this.onStop(event);\r\n        this.onUnsubscribe(event.name);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private onStart({ name, message }: BlockUIEvent) {\r\n    if (name === this.name) {\r\n      const delay = this.delayStart ?? this.settings.delayStart ?? 0;\r\n\r\n      this.state.startCallCount += 1;\r\n      const startTimeout = setTimeout(() => {\r\n        this.state.blockCount += 1;\r\n        this.showBlock(message);\r\n        this.updateInstanceBlockCount();\r\n      }, delay);\r\n      this.state.startTimeouts.push(startTimeout);\r\n    }\r\n  }\r\n\r\n  private onStop({ name }: BlockUIEvent) {\r\n    if (name === this.name) {\r\n      const stopCount = this.state.stopCallCount + 1;\r\n\r\n      if (this.state.startCallCount - stopCount >= 0) {\r\n        const delay = this.delayStop ?? this.settings.delayStop ?? 0;\r\n\r\n        this.state.stopCallCount = stopCount;\r\n        const stopTimeout = setTimeout(() => {\r\n          this.state.blockCount -= 1;\r\n          this.updateInstanceBlockCount();\r\n          this.detectChanges();\r\n        }, delay);\r\n        this.state.stopTimeouts.push(stopTimeout);\r\n      }\r\n    }\r\n  }\r\n\r\n  private onUpdate({ name, message }: BlockUIEvent) {\r\n    if (name === this.name) {\r\n      const delay = this.delayStart || this.settings.delayStart || 0;\r\n\r\n      clearTimeout(this.state.updateTimeouts[0]);\r\n      const updateTimeout = setTimeout(() => {\r\n        this.updateMessage(message);\r\n      }, delay);\r\n      this.state.updateTimeouts.push(updateTimeout);\r\n    }\r\n  }\r\n\r\n  private onReset({ name }: BlockUIEvent) {\r\n    if (name === this.name) {\r\n      this.resetState();\r\n    }\r\n  }\r\n\r\n  private updateMessage(message: string) {\r\n    this.showBlock(message);\r\n  }\r\n\r\n  private showBlock(message: any) {\r\n    this.message = message || this.defaultMessage || this.settings.message;\r\n    this.updateBlockTemplate(this.message);\r\n    this.detectChanges();\r\n  }\r\n\r\n  private updateBlockTemplate(msg: any): void {\r\n    if (this.templateCompRef && this.templateCompRef instanceof ComponentRef) {\r\n      this.templateCompRef.instance.message = msg;\r\n    }\r\n  }\r\n\r\n  private resetState() {\r\n    [\r\n      ...this.state.startTimeouts,\r\n      ...this.state.stopTimeouts,\r\n      ...this.state.updateTimeouts\r\n    ].forEach(clearTimeout);\r\n    this.state = { ...this.defaultBlockState };\r\n    this.updateInstanceBlockCount();\r\n    this.detectChanges();\r\n  }\r\n\r\n  private onUnsubscribe(name: string) {\r\n    if (this.blockUISubscription && name === this.name) {\r\n      this.blockUISubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateInstanceBlockCount() {\r\n    if (this.blockUI.blockUIInstances[this.name]) {\r\n      const { blockCount } = this.state;\r\n      this.blockUI.blockUIInstances[this.name].blockCount = blockCount;\r\n    }\r\n  }\r\n\r\n  private detectChanges() {\r\n    if (!this.changeDetectionRef['destroyed']) {\r\n      this.changeDetectionRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.resetState();\r\n    this.onUnsubscribe(this.name);\r\n    this.blockUI.clearInstance(this.name);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n  ComponentRef\r\n} from '@angular/core';\r\nimport { BlockUIInstanceService } from '../../services/block-ui-instance.service';\r\nimport { BlockUIDefaultName } from '../../constants/block-ui-default-name.constant';\r\n\r\n@Component({\r\n  selector: 'block-ui',\r\n  template: `\r\n    <ng-content></ng-content>\r\n    <block-ui-content\r\n      [name]=\"name\"\r\n      [message]=\"message\"\r\n      [template]=\"template\"\r\n      [delayStart]=\"delayStart\"\r\n      [delayStop]=\"delayStop\"\r\n    >\r\n    </block-ui-content>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BlockUIComponent implements OnInit {\r\n  @Input() name: string;\r\n  @Input() message: any;\r\n  @Input() delayStart: number;\r\n  @Input() delayStop: number;\r\n  @Input() template: any;\r\n\r\n  constructor(\r\n    private blockUI: BlockUIInstanceService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.name = this.name || BlockUIDefaultName;\r\n    this.template = this.template || this.blockUI.blockUISettings.template;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BlockUIActions } from '../constants/block-ui-actions.constant';\r\nimport { BlockUIInstanceService } from './block-ui-instance.service';\r\nimport { NgBlockUI } from '../models/block-ui.model';\r\n\r\n\r\n@Injectable()\r\nexport class BlockUIService {\r\n  globalDispatch: NgBlockUI = this.blockUIInstance.decorate();\r\n\r\n  constructor(\r\n    private blockUIInstance: BlockUIInstanceService\r\n  ) { }\r\n\r\n  /**\r\n  * Starts blocking for given BlockUI instance or instances\r\n  */\r\n  start(target: string | string[], message?: any): void {\r\n    this.dispatch(target, BlockUIActions.START, message);\r\n  }\r\n\r\n  /**\r\n  * Stops blocking for given BlockUI instance or instances\r\n  */\r\n  stop(target: string | string[]): void {\r\n    this.dispatch(target, BlockUIActions.STOP);\r\n  }\r\n\r\n  /**\r\n  * Reset blocking for given BlockUI instance or instances\r\n  */\r\n  reset(target: string | string[]): void {\r\n    this.dispatch(target, BlockUIActions.RESET);\r\n  }\r\n\r\n  /**\r\n  * Reset blocking for all BlockUI instances\r\n  */\r\n  resetGlobal(): void {\r\n    this.globalDispatch.resetGlobal();\r\n  }\r\n\r\n  /**\r\n  * Updates message for given BlockUI instance or instances\r\n  */\r\n  update(target: string | string[], message: any): void {\r\n    this.dispatch(target, BlockUIActions.UPDATE, message);\r\n  }\r\n\r\n  /**\r\n  * Unsubscribes for given BlockUI instance or instances\r\n  */\r\n  unsubscribe(target: string | string[]): void {\r\n    this.dispatch(target, BlockUIActions.UNSUBSCRIBE);\r\n  }\r\n\r\n  /**\r\n  * Checks if BlockUI is actively blocking\r\n  */\r\n  isActive(target: string | string[] = null): boolean {\r\n    const targets = target ? this.toArray(target) : null;\r\n    const instances = this.blockUIInstance.blockUIInstances;\r\n\r\n    return Object.keys(instances).some((key: string) => {\r\n      if (!targets) {\r\n        return instances[key].isActive;\r\n      }\r\n\r\n      return targets.indexOf(instances[key].name) >= 0 && instances[key].isActive;\r\n    });\r\n  }\r\n\r\n  private dispatch(target: string | string[] = [], type: string, message?: any) {\r\n    const instances = this.toArray(target);\r\n    instances.forEach(i => this.blockUIInstance.decorate(i)[type](message));\r\n  }\r\n\r\n  private toArray(target: string | string[] = []) {\r\n    return typeof target === 'string' ? [target] : target;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ComponentRef,\r\n  ComponentFactoryResolver,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  Renderer2,\r\n  EmbeddedViewRef\r\n} from '@angular/core';\r\nimport { BlockUIContentComponent } from '../components/block-ui-content/block-ui-content.component';\r\nimport { BlockUIInstanceService } from '../services/block-ui-instance.service';\r\nimport { BlockUIDefaultName } from '../constants/block-ui-default-name.constant';\r\nimport { BlockUIService } from '../services/block-ui.service';\r\n\r\n@Directive({ selector: '[blockUI]' })\r\nexport class BlockUIDirective implements OnInit, OnDestroy {\r\n  private blockUIComponentRef: ComponentRef<BlockUIContentComponent>;\r\n  blockTarget: string;\r\n  message: any;\r\n  template: any;\r\n  delayStart: any;\r\n  delayStop: any;\r\n\r\n  @Input()\r\n  set blockUI(name: any) { this.blockTarget = name; };\r\n  @Input()\r\n  set blockUIMessage(message: any) { this.message = message; };\r\n  @Input()\r\n  set blockUITemplate(template: any) { this.template = template; };\r\n  @Input()\r\n  set blockUIDelayStart(delayStart: any) {\r\n    this.delayStart = delayStart ? Number(delayStart) : null;\r\n  };\r\n  @Input()\r\n  set blockUIDelayStop(delayStop: any) {\r\n    this.delayStop = delayStop ? Number(delayStop) : null;\r\n  };\r\n\r\n  constructor(\r\n    private blockUIService: BlockUIService,\r\n    private blockUIInstanceService: BlockUIInstanceService,\r\n    private viewRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private renderer: Renderer2,\r\n    private componentFactoryResolver: ComponentFactoryResolver\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.viewRef.createEmbeddedView(this.templateRef);\r\n      const parentElement = this.getParentElement();\r\n\r\n      if (parentElement && !this.isComponentInTemplate(parentElement)) {\r\n        this.renderer.addClass(parentElement, 'block-ui__element');\r\n        this.blockUIComponentRef = this.createComponent();\r\n        let blockUIContent = this.findContentNode(this.viewRef.element.nativeElement);\r\n\r\n        if (blockUIContent) {\r\n          const settings = this.blockUIInstanceService.getSettings();\r\n\r\n          parentElement.appendChild(blockUIContent);\r\n          this.blockUIComponentRef.instance.className = 'block-ui-wrapper--element';\r\n          this.blockUIComponentRef.instance.name = this.blockTarget || BlockUIDefaultName;\r\n          if (this.message) this.blockUIComponentRef.instance.defaultMessage = this.message;\r\n          if (this.delayStart) this.blockUIComponentRef.instance.delayStart = this.delayStart;\r\n          if (this.delayStop) this.blockUIComponentRef.instance.delayStop = this.delayStop;\r\n          if (this.template || settings.template)\r\n            this.blockUIComponentRef.instance.templateCmp = this.template || settings.template;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('ng-block-ui:', error);\r\n    }\r\n  }\r\n\r\n  private isComponentInTemplate(element: any): boolean {\r\n    // Needed because of https://github.com/microsoft/TypeScript/issues/26235\r\n    const targetElement = element || {};\r\n    let { children } = targetElement;\r\n    children = Array.from(children || []).reverse();\r\n    return children.some((el: any) => el && el.localName === 'block-ui');\r\n  }\r\n\r\n  private getParentElement(): Element {\r\n    const embeddedView = this.viewRef.get(0) as EmbeddedViewRef<any>;\r\n\r\n    return embeddedView.rootNodes[0];\r\n\r\n  }\r\n\r\n  // Needed for IE (#17)\r\n  private findContentNode(element: any) {\r\n    const nextSibling = element.nextSibling || {};\r\n    const previousSibling = element.previousSibling || {};\r\n\r\n    return [\r\n      nextSibling,\r\n      nextSibling.nextSibling,\r\n      previousSibling,\r\n      previousSibling.previousSibling\r\n    ].find((e) => e && e.localName === 'block-ui-content');\r\n  }\r\n\r\n  private createComponent() {\r\n    const resolvedBlockUIComponent = this.componentFactoryResolver.resolveComponentFactory(BlockUIContentComponent);\r\n    return this.viewRef.createComponent(resolvedBlockUIComponent);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.blockTarget) {\r\n      this.blockUIService.reset(this.blockTarget);\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BlockUIComponent } from './components/block-ui/block-ui.component';\r\nimport { BlockUIContentComponent } from './components/block-ui-content/block-ui-content.component';\r\nimport { BlockUIInstanceService } from './services/block-ui-instance.service';\r\nimport { BlockUIService } from './services/block-ui.service';\r\nimport { BlockUIDirective } from './directives/block-ui.directive';\r\nimport { BlockUISettings } from './models/block-ui-settings.model';\r\n\r\nexport const BlockUIServiceInstance = new BlockUIInstanceService();\r\n\r\n// Needed for AOT compiling\r\nexport const BlockUIModuleSettings = new InjectionToken<string>('BlockUIModuleSettings');\r\n\r\nexport function provideInstance(settings: BlockUISettings): any {\r\n  BlockUIServiceInstance.updateSettings(settings);\r\n  return BlockUIServiceInstance;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  entryComponents: [\r\n    BlockUIComponent,\r\n    BlockUIContentComponent\r\n  ],\r\n  declarations: [\r\n    BlockUIComponent,\r\n    BlockUIDirective,\r\n    BlockUIContentComponent\r\n  ],\r\n  exports: [\r\n    BlockUIComponent,\r\n    BlockUIDirective,\r\n    BlockUIContentComponent\r\n  ]\r\n})\r\nexport class BlockUIModule {\r\n  public static forRoot(settings: BlockUISettings = {}): ModuleWithProviders<BlockUIModule> {\r\n    return {\r\n      ngModule: BlockUIModule,\r\n      providers: [\r\n        {\r\n          provide: BlockUIModuleSettings,\r\n          useValue: settings\r\n        },\r\n        {\r\n          provide: BlockUIInstanceService,\r\n          useFactory: provideInstance,\r\n          deps: [BlockUIModuleSettings]\r\n        },\r\n        BlockUIService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { BlockUIServiceInstance } from '../block-ui.module';\r\nimport { BlockUIDecoratorSettings } from '../models/block-ui-decorator-settings.model';\r\n\r\nexport let blockInstanceGuid = 1;\r\n\r\nexport function BlockUI(blockName?: string, settings: BlockUIDecoratorSettings = {}) {\r\n  if (!settings.scopeToInstance) {\r\n    return function (target?: any, propertyKey?: string) {\r\n      target[propertyKey] = BlockUIServiceInstance.decorate(blockName);\r\n    };\r\n  }\r\n\r\n\r\n  return function (target?: any, key?: string) {\r\n    const secret = `_${key}-block-ui`;\r\n\r\n    Object.defineProperty(target, key, {\r\n      get: function () {\r\n        if (this[secret]) {\r\n          return this[secret];\r\n        }\r\n\r\n        const instanceName = `${blockName}-${blockInstanceGuid++}`;\r\n        this[secret] = BlockUIServiceInstance.decorate(instanceName);\r\n\r\n        return this[secret];\r\n      },\r\n      set: function (value: any) {\r\n        this[secret] = value;\r\n      },\r\n    });\r\n  };\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.BlockUIInstanceService","i2.BlockUIContentComponent","i1.BlockUIService","i2.BlockUIInstanceService"],"mappings":"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"}